package lissa.gui.farmacia;

import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import lissa.be.Almacen;
import lissa.be.AlmacenProducto;
import lissa.be.Caja;
import lissa.be.Cuentaxcobrar;
import lissa.be.DetalleKardex;
import lissa.be.DetalleVenta;
import lissa.be.FarComprobante;
import lissa.be.HistorialAtencionFps;
import lissa.be.Kardex;
import lissa.be.Persona;
import lissa.be.PersonaJuridica;
import lissa.be.Producto;
import lissa.be.Rol;
import lissa.be.TipoComprobante;
import lissa.be.Usuario;
import lissa.be.Venta;
import lissa.bl.AlmacenProductoBl;
import lissa.bl.CajaBl;
import lissa.bl.CuentaxcobrarBl;
import lissa.bl.DetalleKardexBl;
import lissa.bl.DetalleVentaBl;
import lissa.bl.HistorialAtencionBl;
import lissa.bl.KardexBl;
import lissa.bl.PersonaBl;
import lissa.bl.PersonaJuridicaBl;
import lissa.bl.TipoComprobanteBl;
import lissa.bl.VentaBl;
import lissa.controller.AlmacenCtrl;
import lissa.controller.FarComprobanteCtrl;
import lissa.controller.FarFormaPagoCtrl;
import lissa.ds.DSConeccion;
import lissa.gui.JF_Principal;
import lissa.gui.JIF_AdministrarPersonaJuridica;
import lissa.gui.JIF_AdministrarPersonaNatural;
import lissa.reportes.ReportGeneric;
import lissa.table.ModeloVentaProducto;
import lissa.util.Mensajes;
import lissa.util.Utilitarios;

public class JIF_RegVentas extends javax.swing.JInternalFrame {

    private JF_Principal root;
    private ModeloVentaProducto oModeloVentaProducto;
    private TipoComprobanteBl oTipoComprobanteBl;
    private ArrayList<TipoComprobante> listTipoComprobante;
    private Persona oPersona;
    private PersonaBl oPersonaBl;
    private PersonaJuridica oPersonaJuridica;
    private PersonaJuridicaBl oPersonaJuridicaBl;
    private DetalleVenta oDetalleVenta;
    private DetalleVentaBl oDetalleVentBl;
    private Venta oVenta;
    private VentaBl oVentaBl;
    public static final BigDecimal IGV = new BigDecimal("0.18");
    private BigDecimal montoSubTotal = new BigDecimal("0.00");
    private BigDecimal montoIgv = new BigDecimal("0.00");
    private BigDecimal montoTotal = new BigDecimal("0.00");
    private List<DetalleVenta> listVenta;

    private Usuario userTemp;
    private Persona perTemp;
    private Rol rolTemp;
    private Caja oCaja;
    private CajaBl oCajaBl;
    private Kardex oKardex;
    private KardexBl oKardexBl;
    private DetalleKardex oDetalleKardex;
    private DetalleKardexBl oDetalleKardexBl;
    private AlmacenProducto oAlmacenProducto;
    private AlmacenProductoBl oAlmacenProductoBl;
    private JComboBox cbxAlmacen;
    private AlmacenCtrl oAlmacenCtrl;
    private FarComprobanteCtrl oFarComprobanteCtrl;
    private FarFormaPagoCtrl oFarFormaPagoCtrl;
    //Variables para el reporte
    private ReportGeneric reportGenric = null;
    private JPanel reportPanel = null;
    private DSConeccion ds = null;
    private JInternalFrame reportVisor = null;

    private String tipoComprobante = "";
    private Cuentaxcobrar oCuentaxcobrar;
    private CuentaxcobrarBl oCuentaxcobrarBl;
    private String comprobante = "";
    private HistorialAtencionFps oHistorialAtencionFps;
    private HistorialAtencionBl oHistorialAtencionFpsBl;

    public JIF_RegVentas(JF_Principal root) {
        initComponents();
        this.root = root;
        oModeloVentaProducto = new ModeloVentaProducto();
        tblProductos.setModel(oModeloVentaProducto);
        personalizaTabla();
        cbxAlmacen = new JComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cbxTipoComprobante = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txfNumComprobante = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txfNumDni = new javax.swing.JTextField();
        txfNombresCliente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txfRuc = new javax.swing.JTextField();
        txfRazonSocial = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jdcFechaComprobante = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txfTotalpagar = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblSubTotal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblMontoIgv = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblMontoTotal = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txfEfectivo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txfVuelto = new javax.swing.JTextField();
        btnFormapago = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Registro de ventas");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        cbxTipoComprobante.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxTipoComprobanteItemStateChanged(evt);
            }
        });
        cbxTipoComprobante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoComprobanteActionPerformed(evt);
            }
        });

        jLabel7.setText("Comprobante :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxTipoComprobante, 0, 306, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxTipoComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setText("NÂ° ");

        txfNumComprobante.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfNumComprobante, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txfNumComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel4.setText("Cliente :");

        txfNumDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfNumDniKeyPressed(evt);
            }
        });

        txfNombresCliente.setEditable(false);

        jLabel5.setText("Facturar a :");

        txfRuc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txfRucKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfRucKeyReleased(evt);
            }
        });

        txfRazonSocial.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfNumDni)
                    .addComponent(txfRuc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txfNombresCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                    .addComponent(txfRazonSocial)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(txfNumDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfNombresCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(txfRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jdcFechaComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jdcFechaComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Productos"));

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblProductosMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/add.png"))); // NOI18N
        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnQuitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/remove.png"))); // NOI18N
        btnQuitar.setText("Quitar");
        btnQuitar.setToolTipText("Quitar");
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQuitar))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnQuitar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/Save16.png"))); // NOI18N
        jButton2.setText("Guardar");
        jButton2.setToolTipText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/cancel16.png"))); // NOI18N
        jButton3.setText("Cancelar");
        jButton3.setToolTipText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        jLabel6.setText("Total a pagar :");
        jPanel7.add(jLabel6);

        txfTotalpagar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txfTotalpagar.setEnabled(false);
        jPanel7.add(txfTotalpagar);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel8.setLayout(new java.awt.GridLayout(3, 2));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Sub Total :");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel8.add(jLabel1);

        lblSubTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSubTotal.setForeground(new java.awt.Color(0, 0, 204));
        lblSubTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSubTotal.setText("0.00");
        jPanel8.add(lblSubTotal);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Igv :");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel8.add(jLabel2);

        lblMontoIgv.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMontoIgv.setForeground(new java.awt.Color(0, 0, 204));
        lblMontoIgv.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMontoIgv.setText("0.00");
        jPanel8.add(lblMontoIgv);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Total :");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel8.add(jLabel8);

        lblMontoTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMontoTotal.setForeground(new java.awt.Color(0, 0, 204));
        lblMontoTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMontoTotal.setText("0.00");
        jPanel8.add(lblMontoTotal);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel9.setLayout(new java.awt.GridLayout(1, 0));

        jLabel9.setText("Efectivo : ");
        jPanel9.add(jLabel9);

        txfEfectivo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txfEfectivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txfEfectivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfEfectivoKeyReleased(evt);
            }
        });
        jPanel9.add(txfEfectivo);

        jLabel10.setText("Vuelto :");
        jPanel9.add(jLabel10);
        jLabel10.getAccessibleContext().setAccessibleName("     Vuelto :");

        txfVuelto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txfVuelto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel9.add(txfVuelto);

        btnFormapago.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lissa/resources/Money-icon.png"))); // NOI18N
        btnFormapago.setText("Forma de pago");
        btnFormapago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFormapagoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnFormapago)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(btnFormapago)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxTipoComprobanteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxTipoComprobanteItemStateChanged
        if (oModeloVentaProducto.size() > 0 && cbxTipoComprobante.getSelectedIndex() > 0) {
            recalculaMontosTotales();
        }
    }//GEN-LAST:event_cbxTipoComprobanteItemStateChanged

    private void cbxTipoComprobanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoComprobanteActionPerformed
        if (cbxTipoComprobante.getSelectedIndex() != 0) {
            configurarComprobante();
        }
    }//GEN-LAST:event_cbxTipoComprobanteActionPerformed

    private void txfNumDniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfNumDniKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txfNumDni.getText().trim().toUpperCase().equals("")) {
                buscarCliente();
            } else if (txfNumDni.getText().trim().toUpperCase().equals("")) {
                insertarJifBuscaPersona();
            }
        }
    }//GEN-LAST:event_txfNumDniKeyPressed

    private void txfRucKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfRucKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txfRuc.getText().trim().toUpperCase().equals("")) {
                buscarPersonaJuridica();
            } else if (txfRuc.getText().trim().toUpperCase().equals("")) {
                insertarJifBuscaRuc();
            }
        }
    }//GEN-LAST:event_txfRucKeyPressed

    private void txfRucKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfRucKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txfRucKeyReleased

    private void tblProductosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseReleased
        if (tblProductos.getSelectedRow() != -1 && tblProductos.getRowSelectionAllowed()) {
            oDetalleVenta = oModeloVentaProducto.get(tblProductos.getSelectedRow());
        } else {
            Mensajes.tblSelected();
        }
    }//GEN-LAST:event_tblProductosMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        root.jifBusqProductos.setInvocador(JIF_BusqProductos.JIF_VENTAS);
        root.insertarInternalFrames(root.jifBusqProductos);
        root.jifBusqProductos.inicializar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        if (tblProductos.getSelectedRow() != -1 && tblProductos.getRowSelectionAllowed()) {
            //recalculaMontos();//Primero recalcular antes de quitar el item del modelo
            quitarProducto(tblProductos.getSelectedRow());
            recalculaMontosTotales();

        } else {
            Mensajes.tblSelected();
        }
        personalizaTabla();
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int res = 0;
        if (isDatosValidos()) {
            Venta temp = registrarVenta();
            if (temp != null) {   
                res = registrarDetalleVenta(temp);
                resetMontos();
                oCuentaxcobrar = registrarCuentasxcobrar(temp);
                if (oHistorialAtencionFps != null) {
                    oHistorialAtencionFps = registrarHistorialAtencion(temp);
                }
                registrarKardexAlmacen();
                if (res > 0) {
                    Mensajes.msjRegCorrecta();
                    //imprimir comprobante segun tipo de pago y beneficio
                    //determinarComprobante(oCuentaxcobrar, temp);
                    if (oCuentaxcobrar.getMontoPagado().compareTo(BigDecimal.ZERO) == 1) {//el primer valor es mayor
                        imprimirComprobante(temp);
                    }

                } else {
                    Mensajes.msjRegError();
                }
            }
            resetPaintComponent();
            resetComponent();
        } else {
            Mensajes.msjValidarIngreso();
            paintComponents();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        resetComponent();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txfEfectivoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfEfectivoKeyReleased
        if (!txfEfectivo.getText().trim().equals("")) {
            calcularVuelto();
        } else {
            txfVuelto.setText("");
        }
    }//GEN-LAST:event_txfEfectivoKeyReleased

    private void btnFormapagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFormapagoActionPerformed
        insertarJifFormaPago();
    }//GEN-LAST:event_btnFormapagoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFormapago;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JComboBox cbxTipoComprobante;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcFechaComprobante;
    private javax.swing.JLabel lblMontoIgv;
    private javax.swing.JLabel lblMontoTotal;
    private javax.swing.JLabel lblSubTotal;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txfEfectivo;
    private javax.swing.JTextField txfNombresCliente;
    private javax.swing.JTextField txfNumComprobante;
    private javax.swing.JTextField txfNumDni;
    private javax.swing.JTextField txfRazonSocial;
    private javax.swing.JTextField txfRuc;
    private javax.swing.JTextField txfTotalpagar;
    private javax.swing.JTextField txfVuelto;
    // End of variables declaration//GEN-END:variables
    public void inicializar() {
        cargarCbxTipoComprobanteFar();
        cargarCbxAlmacen();
        Utilitarios.fechaActual(jdcFechaComprobante);
    }

    private void buscarCliente() {
        oPersona = new Persona();
        oPersonaBl = new PersonaBl();
        oPersona = oPersonaBl.buscarPersonaXDni(txfNumDni.getText().trim());
        if (oPersona != null) {
            txfNombresCliente.setText(oPersona.getNombre().trim() + " " + oPersona.getApellidoPaterno().trim() + " " + oPersona.getApellidoMaterno().trim());
        } else {
            txfNombresCliente.setText("");
            insertarJifBuscaPersona();

        }
    }

    private void buscarPersonaJuridica() {
        oPersonaJuridica = new PersonaJuridica();
        oPersonaJuridicaBl = new PersonaJuridicaBl();
        oPersonaJuridica = oPersonaJuridicaBl.buscarxRuc(txfRuc.getText().trim());
        if (oPersonaJuridica != null) {
            txfRazonSocial.setText(oPersonaJuridica.getRazonSocial());
        } else {
            txfRazonSocial.setText("");
            insertarJifBuscaRuc();
        }
    }

    public void cargarDatosPersona(Persona beanTabla) {
        oPersona = beanTabla;
        txfNumDni.setText(oPersona.getNumeroDocumento().trim());
        txfNombresCliente.setText(oPersona.getNombre().trim() + " " + oPersona.getApellidoPaterno().trim() + " " + oPersona.getApellidoMaterno().trim());
    }

    public void cargarDatosPersonaJuridica(PersonaJuridica beanTabla) {
        oPersonaJuridica = beanTabla;
        txfRuc.setText(oPersonaJuridica.getNumeroRuc().trim());
        txfRazonSocial.setText(oPersonaJuridica.getRazonSocial().trim());
    }

//    void enviaDatosProducto(AlmacenProducto oAlmacenProducto) {
//        oDetalleVenta = new DetalleVenta();
//        oDetalleVenta.setProducto(oAlmacenProducto.getProducto());
//        
//    }
    void enviaDatosProducto(DetalleVenta obj) {
        oDetalleVenta = obj;
        //verificar  la existencia del producto en la lista de la tabla
        if (oModeloVentaProducto.size() == 0) {
            oModeloVentaProducto.add(oDetalleVenta);
        } else {
            for (int i = 0; i < oModeloVentaProducto.size(); i++) {
                DetalleVenta det = oModeloVentaProducto.get(i);
                if (oDetalleVenta.getProducto() == det.getProducto()) {
                    //el producto ya existe en la lista
                    JOptionPane.showMessageDialog(null, "El producto ya existe  en la lista", "AtenciÃ³n", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    oModeloVentaProducto.add(oDetalleVenta);
                    break;
                }
            }
        }
        //agregarlo a una lista temporal 
        listVenta = new ArrayList<>();
        listVenta.add(oDetalleVenta);
        //
        personalizaTabla();
        calcularMontos(oDetalleVenta);
    }

    private void personalizaTabla() {
        Utilitarios.formateaColumna(0, tblProductos, 50);
        Utilitarios.formateaColumna(1, tblProductos, 80);
        Utilitarios.formateaColumna(3, tblProductos, 150);
        Utilitarios.formateaColumna(4, tblProductos, 150);
        Utilitarios.formateaColumna(5, tblProductos, 70);
        Utilitarios.formateaColumna(6, tblProductos, 70);
        Utilitarios.alinearDatosColumnaTablaCentro(1, tblProductos);
        Utilitarios.alinearDatosColumnaTablaDerecha(5, tblProductos);
        Utilitarios.alinearDatosColumnaTablaDerecha(6, tblProductos);
    }

    private void calcularMontos(DetalleVenta temp) {
        if (oModeloVentaProducto.size() > 0) {
//            for (int i = 0; i < oModeloVentaProducto.size(); i++) {
//                DetalleVenta temp = oModeloVentaProducto.get(i);
            if (cbxTipoComprobante.getSelectedItem().toString().equals("FACTURA")) {
                montoTotal = montoTotal.add(temp.getPrecioVenta().multiply(new BigDecimal(temp.getCantidadVenta())));
                montoSubTotal = montoSubTotal.add(montoTotal.divide(new BigDecimal("1.18"), 4, RoundingMode.HALF_UP));
                montoIgv = montoSubTotal.multiply(IGV);
            } else {
                //montoSubTotal = montoSubTotal.add(temp.getPrecioVenta().multiply(new BigDecimal(temp.getCantidadVenta())));
                montoSubTotal = BigDecimal.ZERO;
                montoIgv = BigDecimal.ZERO;
                montoTotal = montoTotal.add(temp.getPrecioVenta().multiply(new BigDecimal(temp.getCantidadVenta())));
            }
//            }
            lblSubTotal.setText(montoSubTotal.setScale(2, RoundingMode.HALF_UP).toString());
            lblMontoIgv.setText(montoIgv.setScale(2, RoundingMode.HALF_UP).toString());
            lblMontoTotal.setText(montoTotal.setScale(2, RoundingMode.HALF_UP).toString());
        }
    }

    private void quitarProducto(int selectedRow) {
        oModeloVentaProducto.remove(selectedRow);
    }

    private void recalculaMontos() {
        if (oModeloVentaProducto.size() > 0) {
//            for (int i = 0; i < oModeloVentaProducto.size(); i++) {
//                DetalleVenta temp = oModeloVentaProducto.get(i);
            if (cbxTipoComprobante.getSelectedItem().toString().equals("FACTURA")) {
                montoTotal = montoTotal.subtract(oDetalleVenta.getPrecioVenta().multiply(new BigDecimal(oDetalleVenta.getCantidadVenta())));
                montoSubTotal = montoTotal.divide(new BigDecimal("1.18"), 4, RoundingMode.HALF_UP);
                montoIgv = montoSubTotal.multiply(IGV);
            } else {
                montoSubTotal = BigDecimal.ZERO;
                montoIgv = BigDecimal.ZERO;
                montoTotal = montoTotal.subtract(oDetalleVenta.getPrecioVenta().multiply(new BigDecimal(oDetalleVenta.getCantidadVenta())));
            }
//            }

        } else {
            resetMontos();
        }
        lblSubTotal.setText(montoSubTotal.setScale(2, RoundingMode.HALF_UP).toString());
        lblMontoIgv.setText(montoIgv.setScale(2, RoundingMode.HALF_UP).toString());
        lblMontoTotal.setText(montoTotal.setScale(2, RoundingMode.HALF_UP).toString());
    }

    private boolean isDatosValidos() {
        return (cbxTipoComprobante.getSelectedIndex() > 0
                && !txfNumComprobante.getText().trim().equals("")
                && jdcFechaComprobante.getDate() != null
                && oModeloVentaProducto.size() > 0
                && oCuentaxcobrar != null);
    }

    private void paintComponents() {
        Utilitarios.paintCbxVacio(cbxTipoComprobante);
        Utilitarios.paintBorderTxfVacio(txfNumComprobante);
        Utilitarios.paintJdcVacio(jdcFechaComprobante);
    }

    private void resetPaintComponent() {
        Utilitarios.resetPaintCbx(cbxTipoComprobante);
        Utilitarios.resetPaintBorderTxf(txfNumComprobante);
        Utilitarios.resetPaintJdc(jdcFechaComprobante);
    }

    private Venta registrarVenta() {
        //oVenta = new Venta();
        oVentaBl = new VentaBl();
        if (oPersona != null) {
            oVenta.setIdCliente(oPersona.getIdPersona());
        } else {
            oVenta.setIdCliente(0);
        }
        if (oPersonaJuridica != null) {
            oVenta.setIdPersonajuridica(oPersonaJuridica.getIdPersonaJuridica());
        } else {
            oVenta.setIdPersonajuridica(0);
        }
        oVenta.setIdUsuario(userTemp.getIdUsuario());
        oVenta.setFechaVenta(jdcFechaComprobante.getDate());
        oVenta.setHoraVenta(Utilitarios.horaActual());
        oVenta.setFarComprobante(((FarComprobante) cbxTipoComprobante.getSelectedItem()));
        if (new BigDecimal(txfTotalpagar.getText().trim()).compareTo(BigDecimal.ZERO) == 1) {//el primer valor es mayor
             oVenta.setNumComprobante(generarNumeracionComprobante());
        }
        oVenta.setNumOperacion(obtenerNumOperacion());
        //Determinar grupo de numeracion
        oVenta.setSubTotal(new BigDecimal(lblSubTotal.getText().trim()));
        oVenta.setMontoIgv(new BigDecimal(lblMontoIgv.getText().trim()));
        oVenta.setTotal(new BigDecimal(lblMontoTotal.getText().trim()));
        oVenta.setEstado("ACT");
        oVenta.setMotivoAnulacion("");
        //Buscar la caja del usuario que ingreso al sistema
        //oCaja = buscarCaja(userTemp);
        oVenta.setIdCaja(oCaja.getIdcaja());
        oVenta.setDescripcionSeguros(oCuentaxcobrar.getDescripcionSeguros());

        return oVentaBl.registrar(oVenta);

    }

    private int registrarDetalleVenta(Venta oVenta) {
        int exito = 0;
        if (oModeloVentaProducto.size() > 0) {
            for (int i = 0; i < oModeloVentaProducto.size(); i++) {
                oDetalleVenta = oModeloVentaProducto.get(i);
                oDetalleVentBl = new DetalleVentaBl();
                oDetalleVenta.setVenta(oVenta);
                oDetalleVentBl.registrar(oDetalleVenta);
                exito++;
            }
        } else {
            exito = 0;
        }
        return exito;

    }

    public void cargarDatosUser(Usuario user, Persona oPersona, Rol oRol) {
        userTemp = user;
        perTemp = oPersona;
        rolTemp = oRol;
    }

    private Caja buscarCaja(Usuario user) {
        oCajaBl = new CajaBl();
        return oCajaBl.buscarPorIdusuario(user);
    }

    private void registrarKardexAlmacen() {
        oKardex = registrarKardex();
        if (oKardex != null) {
            registrarDetalleKardex(oKardex);
        }
        actualizarAlmacenStock();
    }

    private Kardex registrarKardex() {
        oKardex = new Kardex();
        oKardexBl = new KardexBl();

        oKardex.setAlmacenByIdOrigen((Almacen) cbxAlmacen.getSelectedItem());
        oKardex.setAlmacenByIdAlmacenAfectado((Almacen) cbxAlmacen.getSelectedItem());
        oKardex.setTipoOperacion("SALIDA");//entrada y salida
        oKardex.setOperacion("VENTA");
        oKardex.setFechaMov(new Date());
        oKardex.setHoraMov(Utilitarios.horaActual());
        oKardex.setComprobante(cbxTipoComprobante.getSelectedItem().toString());
        oKardex.setNumSerie("");
        oKardex.setNumComprobante(0);
        oKardex.setPersonaOrigen("");
        oKardex.setPersonaDestino("");
        oKardex.setObservacion("");

        return oKardexBl.registrar(oKardex);
    }

    private void registrarDetalleKardex(Kardex oKardex) {
        for (int i = 0; i < oModeloVentaProducto.getRowCount(); i++) {
            oDetalleKardex = new DetalleKardex();
            oDetalleKardexBl = new DetalleKardexBl();
            oDetalleVenta = oModeloVentaProducto.get(i);

            oDetalleKardex.setKardex(oKardex);
            oDetalleKardex.setProducto(oDetalleVenta.getProducto());
            oDetalleKardex.setCantidad(oDetalleVenta.getCantidadVenta());
            //Buscar Stock anterior
            long stockAnt = stockAnterior(oDetalleVenta.getProducto().getIdproducto(), ((Almacen) cbxAlmacen.getSelectedItem()).getIdalmacen());

            oDetalleKardex.setStockAntOrig(Integer.parseInt(stockAnt + ""));
            oDetalleKardex.setStockActOrig(Integer.parseInt((stockAnt - oDetalleKardex.getCantidad()) + ""));
            //obtener el ultimo movimiento
            int max = oDetalleKardexBl.maxNumMov();
            oDetalleKardex.setNumeroMovimiento(max + 1);

            oDetalleKardexBl.registrar(oDetalleKardex);
        }
    }

    private void actualizarAlmacenStock() {
        for (int i = 0; i < oModeloVentaProducto.getRowCount(); i++) {
            oAlmacenProducto = new AlmacenProducto();
            oAlmacenProductoBl = new AlmacenProductoBl();
            //buscar en almacen por producto y nombre de almacen para su actualizacion y lote y retornar el objeto a actualizar
            //Buscar por lote
            oDetalleVenta = oModeloVentaProducto.get(i);
            oAlmacenProducto = buscarAlmacenProductoXlote(oDetalleVenta.getLote(), (Almacen) cbxAlmacen.getSelectedItem(), oDetalleVenta.getProducto());
            oAlmacenProducto.setStockActual(oAlmacenProducto.getStockActual() - oDetalleVenta.getCantidadVenta());
            oAlmacenProductoBl.actualizar(oAlmacenProducto);
        }
    }

    private long stockAnterior(int idproducto, int idalmacen) {
        oAlmacenProductoBl = new AlmacenProductoBl();
        return oAlmacenProductoBl.buscar(idproducto, idalmacen);
    }

    private AlmacenProducto buscarAlmacenProductoXlote(String lote, Almacen oAlmacen, Producto oProducto) {
        oAlmacenProductoBl = new AlmacenProductoBl();
        return oAlmacenProductoBl.buscarProductoxAlmacenyLote(lote, oAlmacen, oProducto);
    }

    private void cargarCbxAlmacen() {
        oAlmacenCtrl = new AlmacenCtrl(root);
        oAlmacenCtrl.rellenaAlmacen(cbxAlmacen);
        oAlmacenCtrl.defaultSelectAlmacen("farmacia", cbxAlmacen);
    }

//    private void cargarCbxTipoComprobante() {
//        oTipoComprobanteBl = new TipoComprobanteBl();
//        listTipoComprobante = oTipoComprobanteBl.listar();
//        cbxTipoComprobante.removeAllItems();
//        cbxTipoComprobante.addItem("<Seleccione>");
//        if (!listTipoComprobante.isEmpty()) {
//            for (TipoComprobante oTipoComprobante : listTipoComprobante) {
//                oTipoComprobante.setOp(TipoComprobante.DATO);
//                cbxTipoComprobante.addItem(oTipoComprobante);
//            }
//        }
//    }
    private void cargarCbxTipoComprobanteFar() {
        oFarComprobanteCtrl = new FarComprobanteCtrl(root);
        oFarComprobanteCtrl.rellenaTipoComprobante(cbxTipoComprobante, FarComprobante.VENTA);
    }

    private void resetComponent() {
        cbxTipoComprobante.setSelectedIndex(0);
        txfNumComprobante.setText("");
        jdcFechaComprobante.setDate(null);
        txfNumDni.setText("");
        txfNombresCliente.setText("");
        txfRuc.setText("");
        txfRazonSocial.setText("");
        oModeloVentaProducto.clear();
        resetMontos();
        oPersona = null;
        oPersonaJuridica = null;
        personalizaTabla();
        recalculaMontos();
        resetPaintComponentes();
        Utilitarios.fechaActual(jdcFechaComprobante);
        tipoComprobante = "";
        txfEfectivo.setText("");
        txfVuelto.setText("");
        txfTotalpagar.setText("");
        oCuentaxcobrar = null;
    }

    //
    private void resetMontos() {
        montoSubTotal = BigDecimal.ZERO;
        montoIgv = BigDecimal.ZERO;
        montoTotal = BigDecimal.ZERO;
    }

    public void EnviarDatosCaja(Caja oCaja) {
        this.oCaja = oCaja;
    }

    private void configurarComprobante() {
        oVenta = new Venta();
        resetPaintComponentes();
        if (cbxTipoComprobante.getSelectedItem() != null) {
            switch (cbxTipoComprobante.getSelectedItem().toString()) {
                case "FACTURA":
                    oVenta.setGrupoNumeracion(1);
                    txfNumComprobante.setText("" + Utilitarios.numberFormat(generarNumeracionComprobante(), "##########"));
                    tipoComprobante = "FacturaFar";
                    break;
                case "BOLETA":
                    oVenta.setGrupoNumeracion(1);
                    txfNumComprobante.setText("" + Utilitarios.numberFormat(generarNumeracionComprobante(), "##########"));
                    tipoComprobante = "OtrosComprobantesFar";
                    break;
                case "BOLETA SEGUROS":
                    oVenta.setGrupoNumeracion(1);
                    txfNumComprobante.setText("" + Utilitarios.numberFormat(generarNumeracionComprobante(), "##########"));
                    tipoComprobante = "Far_BoletaSeguros";
                    break;
                case "FICHA DE ATENCION":
                    oVenta.setGrupoNumeracion(2);
                    txfNumComprobante.setText("" + Utilitarios.numberFormat(generarNumeracionComprobante(), "##########"));
                    break;
                case "AUTORIZACION DESCUENTO POR PLANILLA":
                    oVenta.setGrupoNumeracion(3);
                    txfNumComprobante.setText("" + Utilitarios.numberFormat(generarNumeracionComprobante(), "##########"));
                    break;
                default:
            }
        }

    }

    private long generarNumeracionComprobante() {
        oVentaBl = new VentaBl();
        return oVentaBl.obtenerUltNumero(oVenta.getGrupoNumeracion()) + 1;
    }

    private int obtenerNumOperacion() {
        oVentaBl = new VentaBl();
        return oVentaBl.obtenerNumOperacion() + 1;
    }

    private void resetPaintComponentes() {
        Utilitarios.resetPaintBorderTxf(txfNumComprobante);
        Utilitarios.resetPaintCbx(cbxTipoComprobante);
        Utilitarios.resetPaintJdc(jdcFechaComprobante);
    }

    private void insertarJifBuscaPersona() {
        int op;
        op = JOptionPane.showConfirmDialog(null, "Â¿Desea registrar al paciente?", "AtenciÃ³n", JOptionPane.YES_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (op == JOptionPane.YES_OPTION) {
            root.jifAdministrarPersonanatural.setInvocador(JIF_AdministrarPersonaNatural.JIF_VENTAS);
            root.insertarInternalFrames(root.jifAdministrarPersonanatural);
        }
    }

    private void insertarJifBuscaRuc() {
        int op;
        op = JOptionPane.showConfirmDialog(null, "Â¿Desea registrar la persona juridica?", "AtenciÃ³n", JOptionPane.YES_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (op == JOptionPane.YES_OPTION) {
            root.jifAdministrarPersonaJuridica.setInvocador(JIF_AdministrarPersonaJuridica.JIF_VENTAS);
            root.insertarInternalFrames(root.jifAdministrarPersonaJuridica);
        }
    }

    private void recalculaMontosTotales() {
        resetMontos();
        if (oModeloVentaProducto.size() > 0) {
            for (int i = 0; i < oModeloVentaProducto.size(); i++) {
                DetalleVenta temp = oModeloVentaProducto.get(i);
                if (cbxTipoComprobante.getSelectedItem().toString().equals("FACTURA")) {
                    montoTotal = montoTotal.add(temp.getPrecioVenta().multiply(new BigDecimal(temp.getCantidadVenta())));
                    montoSubTotal = montoTotal.divide(new BigDecimal("1.18"), 4, RoundingMode.HALF_UP);
                    montoIgv = montoSubTotal.multiply(IGV);
                } else {
                    montoSubTotal = BigDecimal.ZERO;
                    montoIgv = BigDecimal.ZERO;
                    montoTotal = montoTotal.add(temp.getPrecioVenta().multiply(new BigDecimal(temp.getCantidadVenta())));
                }
            }

        } else {
            resetMontos();
        }
        lblSubTotal.setText(montoSubTotal.setScale(2, RoundingMode.HALF_UP).toString());
        lblMontoIgv.setText(montoIgv.setScale(2, RoundingMode.HALF_UP).toString());
        lblMontoTotal.setText(montoTotal.setScale(2, RoundingMode.HALF_UP).toString());
    }

//    private void determinarComprobante(Cuentaxcobrar oCuentaxcobrar, Venta temp) {
//        if (oCuentaxcobrar.getIdFormapago() == 1) {//imprimir boleta normal
//            imprimirComprobante(temp);
//        } else if (oCuentaxcobrar.getIdFormapago() == 2) {//por ahora no imprime este caso
//
//        } else if (oCuentaxcobrar.getIdFormapago() == 3) {//forma pago seguro = 3
//            if (oCuentaxcobrar.getIdBeneficio() == 1
//                    || oCuentaxcobrar.getIdBeneficio() == 2
//                    || oCuentaxcobrar.getIdBeneficio() == 3
//                    || oCuentaxcobrar.getIdBeneficio() == 4) { 
//                    //sea cualquiera de estos beneficios imprimir boleta para seguros
//                
//            }
//        }
//
//    }
    private void imprimirComprobante(Venta temp) {
        //ds = new DSConeccion("localhost", "5432", "lissadb", "postgres", "12345678");
        if (cbxTipoComprobante.getSelectedItem().toString().equals("FACTURA")
                || cbxTipoComprobante.getSelectedItem().toString().equals("BOLETA")
                || cbxTipoComprobante.getSelectedItem().toString().equals("BOLETA SEGUROS")) {

            try {
                ds = new lissa.ds.DSConeccion(root.getConfig());
                reportGenric = new ReportGeneric(ds.getConeccion());
                reportGenric.setReportParent("/lissa/reportes/");
                reportPanel = reportGenric.mkReport(tipoComprobante, new String[]{"P_ID"}, new Object[]{temp.getIdventa()});
                reportVisor = new JInternalFrame();
                reportVisor.setTitle("Comprobante");
                reportVisor.setIconifiable(true);
                reportVisor.setClosable(true);
                reportVisor.getContentPane().add(reportPanel);
                root.insertarInternalFrames(reportVisor);
                reportVisor.setMaximum(true);
            } catch (Exception ex) {
                Logger.getLogger(JIF_RegVentas.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void calcularVuelto() {
        BigDecimal vuelto = BigDecimal.ZERO;
        BigDecimal efectivo = BigDecimal.ZERO;;
        efectivo = new BigDecimal(txfEfectivo.getText().trim());
        vuelto = efectivo.subtract(new BigDecimal(txfTotalpagar.getText().trim())).setScale(2, RoundingMode.HALF_UP);
        txfVuelto.setText(vuelto.toString());
    }

    private void insertarJifFormaPago() {
        root.insertarInternalFrames(root.jifFormaPago);
        root.jifFormaPago.inicializar();
        root.jifFormaPago.enviaDatosPersona(oPersona);
        root.jifFormaPago.enviaDatos(lblMontoTotal.getText().trim());
    }

    private Cuentaxcobrar registrarCuentasxcobrar(Venta temp) {
        oCuentaxcobrarBl = new CuentaxcobrarBl();
        oCuentaxcobrar.setVenta(temp);
        oCuentaxcobrar.setIdPersonajuridica(temp.getIdPersonajuridica());

        return oCuentaxcobrarBl.registrar(oCuentaxcobrar);
    }

    void enviaCuentasxcobrar(Cuentaxcobrar obj, BigDecimal totalAPagar) {
        oCuentaxcobrar = obj;
        txfTotalpagar.setText(totalAPagar.toString());
    }

    void enviaCuentasxcobrar(Cuentaxcobrar obj, BigDecimal totalAPagar, HistorialAtencionFps hfps) {
        oCuentaxcobrar = obj;
        txfTotalpagar.setText(totalAPagar.toString());
        oHistorialAtencionFps = hfps;
    }

    private HistorialAtencionFps registrarHistorialAtencion(Venta temp) {
        oHistorialAtencionFpsBl = new HistorialAtencionBl();
        oHistorialAtencionFps.setIdVenta(temp.getIdventa());
        return oHistorialAtencionFpsBl.registrar(oHistorialAtencionFps);
    }

}
